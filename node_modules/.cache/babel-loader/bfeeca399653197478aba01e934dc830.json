{"ast":null,"code":"var _jsxFileName = \"/Users/kudy/Desktop/Robofriends-Redux-with-testing-on-count/src/components/CounterButton.js\";\nimport React, { Component } from 'react';\n\nclass CounterButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateCount = () => {\n      this.setState({\n        count: this.state.count + 1\n      });\n    };\n\n    this.state = {\n      count: 0\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return true;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      id: \"counter\",\n      color: this.props.color,\n      onClick: this.updateCount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 3\n      }\n    }, \"Button: \", this.state.count);\n  }\n\n}\n\nexport default CounterButton;","map":{"version":3,"sources":["/Users/kudy/Desktop/Robofriends-Redux-with-testing-on-count/src/components/CounterButton.js"],"names":["React","Component","CounterButton","constructor","props","updateCount","setState","count","state","shouldComponentUpdate","nextProps","nextState","render","color"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AACrCE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;;AADiB,SAWlBC,WAXkB,GAWJ,MAAM;AACnB,WAAKC,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAAX,GAAiB;AAAzB,OAAd;AACA,KAbiB;;AAEjB,SAAKC,KAAL,GAAW;AACVD,MAAAA,KAAK,EAAE;AADG,KAAX;AAGA;;AAEDE,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAC3C,WAAO,IAAP;AACA;;AAMDC,EAAAA,MAAM,GAAG;AACR,wBACA;AACA,MAAA,EAAE,EAAC,SADH;AAEC,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWS,KAFnB;AAGC,MAAA,OAAO,EAAI,KAAKR,WAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIU,KAAKG,KAAL,CAAWD,KAJrB,CADA;AAOA;;AAxBoC;;AA2BtC,eAAeL,aAAf","sourcesContent":["import React, {Component} from 'react';\n\nclass CounterButton extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\tcount: 0\n\t\t}\n\t}\n\n\tshouldComponentUpdate(nextProps, nextState) {\n\t\treturn true\n\t}\n\n\tupdateCount = () => {\n\t\tthis.setState({count: this.state.count+1})\n\t}\n\n\trender() {\n\t\treturn(\n\t\t<button\n\t\tid=\"counter\"\n\t\t color={this.props.color}\n\t\t\tonClick = {this.updateCount}\n\t\t>Button: {this.state.count}</button>\n\t\t)\n\t}\n}\n\nexport default CounterButton"]},"metadata":{},"sourceType":"module"}