{"ast":null,"code":"import { CHANGE_SEARCH_FIELD, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_FAILED } from './constants.js';\nconst initialStateSearch = {\n  searchField: ''\n};\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return Object.assign({}, state, {\n        searchField: action.payload\n      });\n\n    default:\n      return state;\n    // if state not changing return og state\n  }\n};\nconst initialStateRobots = {\n  isPending: false,\n  robots: [],\n  error: ''\n};\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, {\n        isPending: true\n      });\n\n    case REQUEST_ROBOTS_SUCCESS:\n      return Object.assign({}, state, {\n        robots: action.payload,\n        isPending: false\n      });\n\n    case REQUEST_ROBOTS_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: false\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/kudy/Desktop/Robofriends-Redux-with-testing-on-count/src/reducers.js"],"names":["CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","initialStateSearch","searchField","searchRobots","state","action","type","Object","assign","payload","initialStateRobots","isPending","robots","error","requestRobots"],"mappings":"AAAA,SACCA,mBADD,EAECC,sBAFD,EAGCC,sBAHD,EAICC,qBAJD,QAKO,gBALP;AAOA,MAAMC,kBAAkB,GAAG;AAC1BC,EAAAA,WAAW,EAAE;AADa,CAA3B;AAIA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGH,kBAAT,EAA6BI,MAAM,GAAG,EAAtC,KAA6C;AACxE,UAAOA,MAAM,CAACC,IAAd;AACC,SAAKT,mBAAL;AACC,aAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAwB;AAAEF,QAAAA,WAAW,EAAEG,MAAM,CAACI;AAAtB,OAAxB,CAAP;;AACD;AACC,aAAOL,KAAP;AAAc;AAJhB;AAMA,CAPM;AASP,MAAMM,kBAAkB,GAAG;AAC1BC,EAAAA,SAAS,EAAE,KADe;AAE1BC,EAAAA,MAAM,EAAE,EAFkB;AAG1BC,EAAAA,KAAK,EAAE;AAHmB,CAA3B;AAKA,OAAO,MAAMC,aAAa,GAAG,CAACV,KAAK,GAAGM,kBAAT,EAA6BL,MAAM,GAAG,EAAtC,KAA6C;AACzE,UAAOA,MAAM,CAACC,IAAd;AACC,SAAKR,sBAAL;AACC,aAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAwB;AAAEO,QAAAA,SAAS,EAAE;AAAb,OAAxB,CAAP;;AACD,SAAKZ,sBAAL;AACC,aAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAwB;AAAEQ,QAAAA,MAAM,EAAEP,MAAM,CAACI,OAAjB;AAA0BE,QAAAA,SAAS,EAAE;AAArC,OAAxB,CAAP;;AACD,SAAKX,qBAAL;AACC,aAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAwB;AAAES,QAAAA,KAAK,EAAER,MAAM,CAACI,OAAhB;AAAyBE,QAAAA,SAAS,EAAE;AAApC,OAAxB,CAAP;;AACD;AACC,aAAOP,KAAP;AARF;AAUA,CAXM","sourcesContent":["import {\n\tCHANGE_SEARCH_FIELD,\n\tREQUEST_ROBOTS_PENDING,\n\tREQUEST_ROBOTS_SUCCESS,\n\tREQUEST_ROBOTS_FAILED\n} from './constants.js'; \n\nconst initialStateSearch = {\n\tsearchField: ''\n}\n\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\n\tswitch(action.type) {\n\t\tcase CHANGE_SEARCH_FIELD:\n\t\t\treturn Object.assign({}, state,{ searchField: action.payload })\n\t\tdefault:\n\t\t\treturn state; // if state not changing return og state\n\t}\n}\n\nconst initialStateRobots = {\n\tisPending: false,\n\trobots: [], \n\terror: ''\n}\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\n\tswitch(action.type) {\n\t\tcase REQUEST_ROBOTS_PENDING:\n\t\t\treturn Object.assign({}, state,{ isPending: true })\n\t\tcase REQUEST_ROBOTS_SUCCESS:\n\t\t\treturn Object.assign({}, state,{ robots: action.payload, isPending: false })\n\t\tcase REQUEST_ROBOTS_FAILED:\n\t\t\treturn Object.assign({}, state,{ error: action.payload, isPending: false })\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}"]},"metadata":{},"sourceType":"module"}